{
  "meta": {
    "options": {
      "linkedForm": "formMobileRecharge"
    },
    "$_GET": [
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {},
            "core:number": {}
          }
        },
        "name": "transid"
      },
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {}
          }
        },
        "name": "remarks"
      },
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {},
            "core:number": {}
          }
        },
        "name": "userid"
      },
      {
        "type": "text",
        "options": {
          "rules": {
            "core:required": {}
          }
        },
        "name": "token"
      }
    ]
  },
  "exec": {
    "steps": {
      "name": "",
      "module": "core",
      "action": "trycatch",
      "options": {
        "try": {
          "steps": [
            {
              "name": "UserIP",
              "module": "core",
              "action": "setvalue",
              "options": {
                "value": "{{$_SERVER.REMOTE_ADDR}}"
              },
              "meta": [],
              "outputType": "text",
              "output": false
            },
            {
              "name": "getSalt",
              "module": "dbconnector",
              "action": "single",
              "options": {
                "connection": "postgres_gcpServer",
                "sql": {
                  "type": "SELECT",
                  "columns": [
                    {
                      "table": "t_api_token",
                      "column": "ip_address"
                    },
                    {
                      "table": "t_api_token",
                      "column": "call_back_url"
                    },
                    {
                      "table": "t_api_token",
                      "column": "salt",
                      "alias": "getSaltvalue"
                    }
                  ],
                  "table": {
                    "name": "t_api_token"
                  },
                  "joins": [],
                  "query": "SELECT ip_address, call_back_url, salt AS getSaltvalue\nFROM t_api_token\nWHERE user_id = :P1 /* {{$_GET.userid}} */ AND api_token = :P2 /* {{$_GET.token}} */ AND status = 1",
                  "params": [
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P1",
                      "value": "{{$_GET.userid}}"
                    },
                    {
                      "operator": "equal",
                      "type": "expression",
                      "name": ":P2",
                      "value": "{{$_GET.token}}"
                    }
                  ],
                  "wheres": {
                    "condition": "AND",
                    "rules": [
                      {
                        "id": "t_api_token.user_id",
                        "field": "t_api_token.user_id",
                        "type": "double",
                        "operator": "equal",
                        "value": "{{$_GET.userid}}",
                        "data": {
                          "table": "t_api_token",
                          "column": "user_id",
                          "type": "number"
                        },
                        "operation": "="
                      },
                      {
                        "id": "t_api_token.api_token",
                        "field": "t_api_token.api_token",
                        "type": "string",
                        "operator": "equal",
                        "value": "{{$_GET.token}}",
                        "data": {
                          "table": "t_api_token",
                          "column": "api_token",
                          "type": "text"
                        },
                        "operation": "="
                      },
                      {
                        "id": "t_api_token.status",
                        "field": "t_api_token.status",
                        "type": "double",
                        "operator": "equal",
                        "value": 1,
                        "data": {
                          "table": "t_api_token",
                          "column": "status",
                          "type": "number"
                        },
                        "operation": "="
                      }
                    ],
                    "conditional": null,
                    "valid": true
                  }
                }
              },
              "output": false,
              "meta": [
                {
                  "type": "text",
                  "name": "ip_address"
                },
                {
                  "type": "text",
                  "name": "call_back_url"
                },
                {
                  "type": "text",
                  "name": "getSaltvalue"
                }
              ],
              "outputType": "object"
            },
            {
              "name": "",
              "module": "core",
              "action": "condition",
              "options": {
                "if": "{{getSalt.ip_address}}",
                "then": {
                  "steps": {
                    "name": "",
                    "module": "core",
                    "action": "condition",
                    "options": {
                      "if": "{{getSalt.ip_address == UserIP}}",
                      "then": {
                        "steps": [
                          {
                            "name": "GetComplain",
                            "module": "dbconnector",
                            "action": "single",
                            "options": {
                              "connection": "postgres_gcpServer",
                              "sql": {
                                "type": "SELECT",
                                "columns": [
                                  {
                                    "table": "tt_recharge_trans",
                                    "column": "id",
                                    "alias": "CountIds",
                                    "aggregate": "COUNT"
                                  }
                                ],
                                "table": {
                                  "name": "tt_recharge_trans"
                                },
                                "joins": [],
                                "groupBy": [],
                                "wheres": {
                                  "condition": "AND",
                                  "rules": [
                                    {
                                      "id": "tt_recharge_trans.id",
                                      "field": "tt_recharge_trans.id",
                                      "type": "double",
                                      "operator": "equal",
                                      "value": "{{$_GET.transid}}",
                                      "data": {
                                        "table": "tt_recharge_trans",
                                        "column": "id",
                                        "type": "number"
                                      },
                                      "operation": "="
                                    },
                                    {
                                      "id": "tt_recharge_trans.user_id",
                                      "field": "tt_recharge_trans.user_id",
                                      "type": "double",
                                      "operator": "equal",
                                      "value": "{{$_GET.userid}}",
                                      "data": {
                                        "table": "tt_recharge_trans",
                                        "column": "user_id",
                                        "type": "number"
                                      },
                                      "operation": "="
                                    },
                                    {
                                      "id": "tt_recharge_trans.extra2",
                                      "field": "tt_recharge_trans.extra2",
                                      "type": "string",
                                      "operator": "is_null",
                                      "value": null,
                                      "data": {
                                        "table": "tt_recharge_trans",
                                        "column": "extra2",
                                        "type": "text"
                                      },
                                      "operation": "IS NULL"
                                    }
                                  ],
                                  "conditional": null,
                                  "valid": true
                                },
                                "query": "SELECT COUNT(id) AS CountIds\nFROM tt_recharge_trans\nWHERE id = :P1 /* {{$_GET.transid}} */ AND user_id = :P2 /* {{$_GET.userid}} */ AND extra2 IS NULL",
                                "params": [
                                  {
                                    "operator": "equal",
                                    "type": "expression",
                                    "name": ":P1",
                                    "value": "{{$_GET.transid}}"
                                  },
                                  {
                                    "operator": "equal",
                                    "type": "expression",
                                    "name": ":P2",
                                    "value": "{{$_GET.userid}}"
                                  }
                                ]
                              }
                            },
                            "output": false,
                            "meta": [
                              {
                                "type": "number",
                                "name": "CountIds"
                              }
                            ],
                            "outputType": "object"
                          },
                          {
                            "name": "",
                            "module": "core",
                            "action": "condition",
                            "options": {
                              "if": "{{GetComplain.CountIds > 0}}",
                              "then": {
                                "steps": [
                                  {
                                    "name": "ComplainAdd",
                                    "module": "dbupdater",
                                    "action": "insert",
                                    "options": {
                                      "connection": "postgres_gcpServer",
                                      "sql": {
                                        "type": "insert",
                                        "values": [
                                          {
                                            "table": "t_ticket",
                                            "column": "user_id",
                                            "type": "number",
                                            "value": "{{$_GET.userid}}"
                                          },
                                          {
                                            "table": "t_ticket",
                                            "column": "support_type",
                                            "type": "text",
                                            "value": "{{'Recharge Complain'}}"
                                          },
                                          {
                                            "table": "t_ticket",
                                            "column": "message",
                                            "type": "text",
                                            "value": "{{$_GET.remarks}}"
                                          },
                                          {
                                            "table": "t_ticket",
                                            "column": "tran_id",
                                            "type": "text",
                                            "value": "{{$_GET.transid}}"
                                          },
                                          {
                                            "table": "t_ticket",
                                            "column": "status",
                                            "type": "text",
                                            "value": "{{1}}"
                                          },
                                          {
                                            "table": "t_ticket",
                                            "column": "adddate",
                                            "type": "datetime",
                                            "value": "{{NOW}}"
                                          },
                                          {
                                            "table": "t_ticket",
                                            "column": "created_on",
                                            "type": "datetime",
                                            "value": "{{NOW}}"
                                          }
                                        ],
                                        "table": "t_ticket",
                                        "returning": "id",
                                        "query": "INSERT INTO t_ticket\n(user_id, support_type, message, tran_id, status, adddate, created_on) VALUES (:P1 /* {{$_GET.userid}} */, :P2 /* {{'Recharge Complain'}} */, :P3 /* {{$_GET.remarks}} */, :P4 /* {{$_GET.transid}} */, :P5 /* {{1}} */, :P6 /* {{NOW}} */, :P7 /* {{NOW}} */)",
                                        "params": [
                                          {
                                            "name": ":P1",
                                            "type": "expression",
                                            "value": "{{$_GET.userid}}"
                                          },
                                          {
                                            "name": ":P2",
                                            "type": "expression",
                                            "value": "{{'Recharge Complain'}}"
                                          },
                                          {
                                            "name": ":P3",
                                            "type": "expression",
                                            "value": "{{$_GET.remarks}}"
                                          },
                                          {
                                            "name": ":P4",
                                            "type": "expression",
                                            "value": "{{$_GET.transid}}"
                                          },
                                          {
                                            "name": ":P5",
                                            "type": "expression",
                                            "value": "{{1}}"
                                          },
                                          {
                                            "name": ":P6",
                                            "type": "expression",
                                            "value": "{{NOW}}"
                                          },
                                          {
                                            "name": ":P7",
                                            "type": "expression",
                                            "value": "{{NOW}}"
                                          }
                                        ]
                                      }
                                    },
                                    "meta": [
                                      {
                                        "name": "identity",
                                        "type": "text"
                                      },
                                      {
                                        "name": "affected",
                                        "type": "number"
                                      }
                                    ],
                                    "output": false
                                  },
                                  {
                                    "name": "RechTransUp",
                                    "module": "dbupdater",
                                    "action": "update",
                                    "options": {
                                      "connection": "postgres_gcpServer",
                                      "sql": {
                                        "type": "update",
                                        "values": [
                                          {
                                            "table": "tt_recharge_trans",
                                            "column": "extra2",
                                            "type": "text",
                                            "value": "1"
                                          }
                                        ],
                                        "table": "tt_recharge_trans",
                                        "wheres": {
                                          "condition": "AND",
                                          "rules": [
                                            {
                                              "id": "id",
                                              "field": "id",
                                              "type": "double",
                                              "operator": "equal",
                                              "value": "{{$_GET.transid}}",
                                              "data": {
                                                "column": "id"
                                              },
                                              "operation": "="
                                            },
                                            {
                                              "id": "user_id",
                                              "field": "user_id",
                                              "type": "double",
                                              "operator": "equal",
                                              "value": "{{$_GET.userid}}",
                                              "data": {
                                                "column": "user_id"
                                              },
                                              "operation": "="
                                            }
                                          ],
                                          "conditional": null,
                                          "valid": true
                                        },
                                        "query": "UPDATE tt_recharge_trans\nSET extra2 = '1'\nWHERE id = :P1 /* {{$_GET.transid}} */ AND user_id = :P2 /* {{$_GET.userid}} */",
                                        "params": [
                                          {
                                            "operator": "equal",
                                            "type": "expression",
                                            "name": ":P1",
                                            "value": "{{$_GET.transid}}"
                                          },
                                          {
                                            "operator": "equal",
                                            "type": "expression",
                                            "name": ":P2",
                                            "value": "{{$_GET.userid}}"
                                          }
                                        ]
                                      }
                                    },
                                    "meta": [
                                      {
                                        "name": "affected",
                                        "type": "number"
                                      }
                                    ],
                                    "output": false
                                  },
                                  {
                                    "name": "Complain",
                                    "module": "core",
                                    "action": "setvalue",
                                    "options": {
                                      "value": "Complain Successfully Raised"
                                    },
                                    "meta": [],
                                    "output": true,
                                    "outputType": "text"
                                  }
                                ]
                              },
                              "else": {
                                "steps": {
                                  "name": "Complain",
                                  "module": "core",
                                  "action": "setvalue",
                                  "options": {
                                    "value": "Complain Already Raised"
                                  },
                                  "meta": [],
                                  "output": true,
                                  "outputType": "text"
                                }
                              }
                            },
                            "outputType": "boolean"
                          }
                        ]
                      },
                      "else": {
                        "steps": {
                          "name": "ResUnauth",
                          "module": "core",
                          "action": "response",
                          "options": {
                            "status": 401,
                            "data": "Unauthorized user with IP {{UserIP}}"
                          }
                        }
                      }
                    },
                    "outputType": "boolean"
                  }
                },
                "else": {
                  "steps": {
                    "name": "ResUnauth",
                    "module": "core",
                    "action": "response",
                    "options": {
                      "status": 401,
                      "data": "Unauthorized Access!"
                    }
                  }
                }
              },
              "outputType": "boolean"
            }
          ]
        },
        "catch": {
          "steps": {
            "name": "ResUnauth",
            "module": "core",
            "action": "response",
            "options": {
              "status": 401,
              "data": "Unauthorized Access!"
            }
          }
        }
      }
    }
  }
}
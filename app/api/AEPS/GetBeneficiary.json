{
  "meta": {
    "$_GET": [
      {
        "type": "text",
        "name": "sort"
      },
      {
        "type": "text",
        "name": "dir"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "",
        "module": "auth",
        "action": "restrict",
        "options": {
          "provider": "security",
          "permissions": [
            "write"
          ],
          "loginUrl": "/login",
          "forbiddenUrl": "/403-forbidden"
        },
        "disabled": true
      },
      {
        "name": "identity",
        "module": "auth",
        "action": "identify",
        "options": {
          "provider": "security"
        },
        "output": false,
        "meta": [],
        "disabled": true
      },
      {
        "name": "ViewBenef",
        "module": "dbconnector",
        "action": "select",
        "options": {
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "t_aeps_benef_epay",
                "column": "id"
              },
              {
                "table": "t_aeps_benef_epay",
                "column": "benef_name"
              },
              {
                "table": "t_aeps_benef_epay",
                "column": "bank_name"
              },
              {
                "table": "t_aeps_benef_epay",
                "column": "bank_ifsc"
              },
              {
                "table": "t_aeps_benef_epay",
                "column": "account_no"
              },
              {
                "table": "t_aeps_benef_epay",
                "column": "contacts"
              },
              {
                "table": "t_aeps_benef_epay",
                "column": "created_on"
              },
              {
                "table": "t_aeps_benef_epay",
                "column": "blank1",
                "alias": "benef_id"
              }
            ],
            "table": {
              "name": "t_aeps_benef_epay"
            },
            "primary": "id",
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "t_aeps_benef_epay.user_id",
                  "field": "t_aeps_benef_epay.user_id",
                  "type": "double",
                  "operator": "equal",
                  "value": 110,
                  "data": {
                    "table": "t_aeps_benef_epay",
                    "column": "user_id",
                    "type": "number",
                    "columnObj": {
                      "type": "integer",
                      "primary": false,
                      "unique": false,
                      "nullable": false,
                      "name": "user_id"
                    }
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "orders": [
              {
                "table": "t_aeps_benef_epay",
                "column": "id",
                "direction": "DESC",
                "recid": 1
              }
            ],
            "query": "SELECT id, benef_name, bank_name, bank_ifsc, account_no, contacts, created_on, blank1 AS benef_id\nFROM t_aeps_benef_epay\nWHERE user_id = 110\nORDER BY id DESC",
            "params": []
          },
          "connection": "postgres_gcpServer"
        },
        "output": false,
        "meta": [
          {
            "type": "number",
            "name": "id"
          },
          {
            "type": "text",
            "name": "benef_name"
          },
          {
            "type": "text",
            "name": "bank_name"
          },
          {
            "type": "text",
            "name": "bank_ifsc"
          },
          {
            "type": "text",
            "name": "account_no"
          },
          {
            "type": "text",
            "name": "contacts"
          },
          {
            "type": "datetime",
            "name": "created_on"
          },
          {
            "type": "text",
            "name": "benef_id"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "AEPSBalance",
        "module": "dbconnector",
        "action": "single",
        "options": {
          "connection": "postgres_gcpServer",
          "sql": {
            "type": "SELECT",
            "columns": [
              {
                "table": "m_users",
                "column": "aeps_balance"
              }
            ],
            "table": {
              "name": "m_users"
            },
            "primary": "id",
            "joins": [],
            "wheres": {
              "condition": "AND",
              "rules": [
                {
                  "id": "m_users.id",
                  "field": "m_users.id",
                  "type": "double",
                  "operator": "equal",
                  "value": 110,
                  "data": {
                    "table": "m_users",
                    "column": "id",
                    "type": "number",
                    "columnObj": {
                      "type": "increments",
                      "default": "",
                      "primary": true,
                      "nullable": false,
                      "unique": true,
                      "name": "id"
                    }
                  },
                  "operation": "="
                }
              ],
              "conditional": null,
              "valid": true
            },
            "query": "SELECT aeps_balance\nFROM m_users\nWHERE id = 110",
            "params": []
          }
        },
        "output": false,
        "meta": [
          {
            "type": "text",
            "name": "aeps_balance"
          }
        ],
        "outputType": "object"
      },
      {
        "name": "GetAEPSLimit",
        "module": "dbupdater",
        "action": "custom",
        "options": {
          "connection": "postgres_gcpServer",
          "sql": {
            "query": "SELECT SUM(tab.amount::int) as aeps_minus_amount from tt_aeps_trans tab \nleft join m_operator mo on (mo.id=tab.op_id and mo.service_id=tab.service_id)\nWHERE tab.user_id=@user_id AND tab.tr_date::date=now()::date AND tab.status=@status and (mo.operator_name = @op1 \nor mo.operator_name = @op2);",
            "params": [
              {
                "name": "@user_id",
                "value": "110",
                "test": "110"
              },
              {
                "name": "@status",
                "value": "{{'SUCCESS'}}",
                "test": "SUCCESS"
              },
              {
                "name": "@op1",
                "value": "{{'AEPS Wallet Settlement'}}",
                "test": "AEPS Wallet Settlement"
              },
              {
                "name": "@op2",
                "value": "{{'AEPS Bank Transfer'}}",
                "test": "AEPS Bank Transfer"
              }
            ]
          }
        },
        "output": false,
        "meta": [
          {
            "name": "aeps_minus_amount",
            "type": "text"
          }
        ],
        "outputType": "array"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{GetAEPSLimit[0].aeps_minus_amount==null}}",
          "then": {
            "steps": [
              {
                "name": "GetAEPSLimit2Number",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{GetAEPSLimit[0].aeps_minus_amount==null?0:GetAEPSLimit[0].aeps_minus_amount}}"
                },
                "meta": [
                  {
                    "name": "aeps_minus_amount",
                    "type": "text"
                  }
                ],
                "outputType": "text",
                "output": false
              },
              {
                "name": "AEPSBal",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{AEPSBalance.aeps_balance==null?0:AEPSBalance.aeps_balance}}"
                },
                "meta": [
                  {
                    "name": "aeps_balance",
                    "type": "text"
                  }
                ],
                "outputType": "text",
                "output": false
              },
              {
                "name": "AEPSLimit",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{AEPSBal.toNumber()-GetAEPSLimit2Number.toNumber()}}"
                },
                "meta": [
                  {
                    "name": "aeps_balance",
                    "type": "text"
                  }
                ],
                "output": true,
                "outputType": "text"
              }
            ]
          },
          "else": {
            "steps": [
              {
                "name": "GetOpeningBal",
                "module": "dbupdater",
                "action": "custom",
                "options": {
                  "connection": "postgres_gcpServer",
                  "sql": {
                    "query": "SELECT tab.op_bal from tt_aeps_trans tab \nWHERE tab.user_id=@user_id AND tab.tr_date::date=now()::date ORDER by id asc limit 1;",
                    "params": [
                      {
                        "name": "@user_id",
                        "value": "110",
                        "test": "63"
                      }
                    ]
                  }
                },
                "output": true,
                "meta": [
                  {
                    "name": "op_bal",
                    "type": "text"
                  }
                ],
                "outputType": "array"
              },
              {
                "name": "GetAEPSLimit2Number",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{GetAEPSLimit[0].aeps_minus_amount==null?0:GetAEPSLimit[0].aeps_minus_amount}}"
                },
                "meta": [
                  {
                    "name": "aeps_minus_amount",
                    "type": "text"
                  }
                ],
                "outputType": "text",
                "output": true
              },
              {
                "name": "AEPSBal",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{GetOpeningBal[0].op_bal}}"
                },
                "meta": [],
                "outputType": "text",
                "output": true
              },
              {
                "name": "AEPSLimit",
                "module": "core",
                "action": "setvalue",
                "options": {
                  "value": "{{AEPSBal.toNumber()-GetAEPSLimit2Number.toNumber()}}"
                },
                "meta": [],
                "output": true,
                "outputType": "text"
              }
            ]
          }
        },
        "outputType": "boolean"
      },
      {
        "name": "api",
        "module": "api",
        "action": "send",
        "options": {
          "url": "https://180.179.23.1:444/Aeps/AepsSettlement",
          "method": "POST",
          "dataType": "json",
          "data": {
            "Code": "A00055",
            "Authcode": "65c43ccd6a7b41c884",
            "Mpin": "7170",
            "Contact": "{{ViewBenef[0].contacts}}"
          }
        },
        "output": true,
        "disabled": true
      }
    ]
  }
}